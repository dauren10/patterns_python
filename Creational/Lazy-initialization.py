'''Объект, инициализируемый во время первого обращения к нему.'''
'''
Что такое шаблон проектирования отложенной инициализации?

Отложенная инициализация, также называемая отложенной загрузкой, — это очень простой, но мощный шаблон проектирования, который позволяет нам откладывать инициализацию объекта до тех пор, пока он не понадобится.

Он используется для повышения производительности приложений, ускорения процесса инициализации и снижения потребления ресурсов: полосы пропускания, нагрузки на базу данных, оперативной памяти и использования ЦП.
Использование ленивой инициализации в Python

Предположим, мы реализовали интернет-магазин, в котором у нас есть объект Customer, у которого может быть список созданных им заказов. Без отложенной загрузки у нас, вероятно, был бы полный список заказов, извлекаемый из базы данных каждый раз, когда мы будем создавать объект Customer. Даже если бы в учетной записи клиента не было заказов, мы бы запросили базу данных.

Хуже того, если мы хотим получить список всех клиентов, не заботясь о заказах, будут извлечены все данные и, возможно, будет создано несколько запросов к базе данных.

Чтобы решить эту проблему, мы можем реализовать модель Customer, 

'''
class Customer:
    def __init__(self):
        self._orders = None

    def get_orders(self):
        if self._orders is None:
            self._orders = self._load_orders()
        return self._orders

    def _load_orders(self):
        print("loading orders")
        return []

customer = Customer()

customer.get_orders()
customer.get_orders()
customer.get_orders()
customer.get_orders()
customer.get_orders()